@using Models.SysModels
@using Newtonsoft.Json
@{
    Layout = "../../../../views/Shared/_Layout.cshtml";
}

@section Styles
{
    <style>
        .navbar-nav li a {
            padding-left: 18px;
            padding-right: 18px;
        }
    </style>
}

@section Scripts{

    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script src="/signalr/hubs"></script>

    <script>
        $.ajaxSetup({ cache: false });

        $(function() {
            if (window.location.hash.length>1) {
                $("#Main").load(window.location.hash.substr(1));
            }
        });

        window.onhashchange = function () {
            if (window.location.hash.length > 1) {
                $("#Main").load(window.location.hash.substr(1));
            }
        }

        $(document).ajaxStart(function () {
            Pace.restart();
        });

        $(document).ajaxStop(function () {
            $('#Main input[type=text]:first').focus();
            Pace.stop();
        });

        $(document).ajaxError(function (event, request) {
            if (request.responseText === '' || request.responseText == undefined) {
                $.notify('您的网络无法访问到服务器，请稍后再试！', { "status": "danger", "pos": "bottom-right" });
            } else {
                $.notify(request.responseText, { "status": "danger", "pos": "bottom-right" });
            }
        });
    </script>
    
    <script>
        $(function () {
            var messenger = $.connection.messenger; // generate the client-side hub proxy { Initialized to Exposed Hub }

            messenger.client.add = function (message) {
                if (message !== "" && message != null) {
                    $.notify('<a href="#/Platform/MyMessage">' + message + "</a>", { "status": "danger", "pos": "bottom-right" });
                }
            };

            // Start the Connection
            $.connection.hub.start().done().fail(function () {
                $.notify('消息推送服务启动失败！', { "status": "danger", "pos": "bottom-right" });
            });
        });
    </script>
    
}

<div class="wrapper">
    <!-- top navbar-->
    <header class="topnavbar-wrapper">
        @Html.Partial("_TopNavbar")
    </header>
    <!-- sidebar-->
    <aside class="aside">
        <div class="aside-inner">
            <nav class="sidebar">
                @*<h4>菜单</h4>
                <ul id="leftmenutree" class="ztree"></ul>*@
                

                <ul class="nav">
                    <li class="nav-heading">
                        <span>菜单</span>
                    </li>
                    @{
                        IEnumerable<SysController> menus = ViewBag.Menu;
                    }

                    @foreach (var item in menus.Where(a => a.SystemId.Length == 3))
                    {
                        <li>
                            <a href="#@item.Id" title="@item.Name" data-toggle="collapse">
                                <div class="label label-info  pull-right">@menus.Count(a => a.SystemId.Length == 6 && a.SystemId.StartsWith(item.SystemId))</div>
                                <i class="fa fa-fw @item.Ico"></i>
                                <span>@item.Name</span>
                            </a>
                            <ul id="@item.Id" class="nav sidebar-subnav collapse">
                                <li class="sidebar-subnav-header">@item.Name</li>
                                @foreach (var item1 in menus.Where(a => a.SystemId.Length == 6 && a.SystemId.StartsWith(item.SystemId)))
                                {
                                    <li>
                                        <a title="@item1.Name"  href="#@Url.Action(item1.ActionName, item1.ControllerName, new { id = item1.Parameter })">
                                            <i class="fa fa-fw @item1.Ico"></i>
                                            @Html.DisplayFor(a => item1.Name)
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </nav>
        </div>

    </aside>
    <!-- offsidebar-->
    <aside class="offsidebar hide">
        @Html.Partial("_Offsidebar")
    </aside>
    <!-- Main section-->
    <section>
        <!-- Page content-->
        <div class="content-wrapper" id="Main">
            <div class="content-heading">

                管理平台桌面
                <small> 欢迎进入管理平台</small>

            </div>

            <div class="row">
               

                <div class="col-lg-6">
                    <!-- START widget-->
                    <div class="panel ">
                        <div class="panel-heading">
                            <div class="panel-title">管理平台使用数据分析</div>
                        </div>

                        <div class="panel-body">
                            <div>
                              
                                <canvas id="sysUserLogChart" ></canvas>
                             
                                <script>
                                    @{
                                        var SysUserLogCountDay = ViewBag.SysUserLogCountDay as Dictionary<string, int>;
                                    }
                                    var chart = new Chart(document.getElementById('sysUserLogChart').getContext('2d'),
                                        {
                                            // The type of chart we want to create
                                            type: 'line',

                                            // The data for our dataset
                                            data: {
                                                labels: @Html.Raw(JsonConvert.SerializeObject(SysUserLogCountDay.Keys)),
                                                datasets: [
                                                    {
                                                        label: "使用次数",
                                                        data:
                                                            @Html.Raw(JsonConvert.SerializeObject(SysUserLogCountDay.Values))
                                                    }
                                                ]
                                            },

                                            // Configuration options go here
                                            options: {}
                                        });
                                </script>
                            </div>
                        </div>
                    </div>
                    <!-- END widget-->
                </div>

                <div class="col-lg-6">
                    <!-- START widget-->
                    <div class="panel ">
                        <div class="panel-heading">
                            <div class="panel-title">平台执行速度分析</div>
                        </div>

                        <div class="panel-body">
                            <div>
                                <canvas id="myChart"></canvas>
                                <script>
                                    @{
                                        var sysUserLogDayDuration = ViewBag.SysUserLogDayDuration as Dictionary<string, double>;
                                    }
                                    var chart = new Chart(document.getElementById('myChart').getContext('2d'),
                                        {
                                            // The type of chart we want to create
                                            type: 'line',

                                            // The data for our dataset
                                            data: {
                                                labels: @Html.Raw(JsonConvert.SerializeObject(sysUserLogDayDuration.Keys)),
                                                datasets: [
                                                    {
                                                        label: "平均执行时长（秒）",
                                                        data:
                                                            @Html.Raw(JsonConvert.SerializeObject(sysUserLogDayDuration.Values))
                                                    }
                                                ]
                                            },

                                            // Configuration options go here
                                            options: {}
                                        });
                                </script>
                            </div>
                        </div>
                    </div>
                    <!-- END widget-->
                </div>
            </div>
        </div>
    </section>
    <!-- Page footer-->
    <footer>
        @Html.Partial("_Footer")
    </footer>
</div>





